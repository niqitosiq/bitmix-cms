// This is the Prisma schema file

datasource db {
  provider = "sqlite"
  url      = "file:./backend/db.sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model Site {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Pages     Page[]
}

model Page {
  id        String   @id @default(uuid())
  url       String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  schemaId  String
  Schema    Schema?  @relation(fields: [schemaId], references: [id])
  Site      Site?    @relation(fields: [siteId], references: [id])
  siteId    String?
}

model Category {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  frame     Frame[]
}

model PropValue {
  id                   String   @id @default(uuid())
  value                String?
  schemaReferenceAlias String?
  schemaReferenceField String?
  Schema               Schema?  @relation(fields: [schemaReferenceAlias], references: [alias])
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  type                 String?
  propId               String?
  Prop                 Prop?
}

model Prop {
  id          String     @id @default(uuid())
  name        String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Schema      Schema?    @relation(fields: [schemaId], references: [id])
  schemaId    String?
  propValue   PropValue? @relation(fields: [propValueId], references: [id])
  propValueId String?    @unique
}

model Schema {
  id                   String        @id @default(uuid())
  alias                String        @unique
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  props                Prop[]
  frameId              String
  Page                 Page[]
  ReferenceToPropValue PropValue[]
  Frame                Frame?        @relation("Frame", fields: [frameId], references: [id])
  ParentSchema         Schema?       @relation("ChildrenSchema", fields: [parentSchemaId], references: [id])
  parentSchemaId       String?
  ChildrenSchema       Schema[]      @relation("ChildrenSchema")
  visibleProps         VisibleProp[]
}

model VisibleProp {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  frameId   String
  Schema    Schema?  @relation(fields: [frameId], references: [id])
}

model Frame {
  id            String    @id @default(uuid())
  name          String    @unique
  description   String?
  icon          String?
  category      Category? @relation(fields: [categoryId], references: [id])
  type          String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  categoryId    String?
  isBase        Boolean   @default(false)
  code          String?
  ParentSchemas Schema[]  @relation("Frame")
}
